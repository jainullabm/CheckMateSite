version: 0.1
component: build
timeoutInSeconds: 6000
shell: bash

env:
    variables:
        JAVA_HOME: "javahome"
        
    vaultVariables:
        OCIR_HOST_VAULT_NEW: "ocid1.vaultsecret.oc1.iad.amaaaaaart6i5vqah7suqsk7tf5uld5kmiknaaaaxji5eljxkx2og7t4kcuq"
        OCIR_NAMESPACE_VAULT_NEW: "ocid1.vaultsecret.oc1.iad.amaaaaaart6i5vqan7ccdk7xhlzypbuv6yb6x2cqmabzvtx7ib6u2hlhcjca"
        
    exportedVariables:
        - CHECKMATE_SITE_VERSION
        - OCIR_HOST 
        - OCIR_STORAGE_NAMESPACE
        
steps:
  - type: Command                   
    name: "Extract Export Variables"                 
    timeoutInSeconds: 650           
    command: |
        echo path is
        echo $PATH
        echo JAVA_HOME is  
        echo $JAVAHOME
        export CHECKMATE_SITE_VERSION=1.0.0
        export OCIR_HOST=$OCIR_HOST_VAULT_NEW
        export OCIR_STORAGE_NAMESPACE=$OCIR_NAMESPACE_VAULT_NEW
        echo "OCIR_HOST" $OCIR_HOST
        echo "OCIR_STORAGE_NAMESPACE" $OCIR_STORAGE_NAMESPACE
        echo Success
    onFailure:                      
      - type: Command
        command: |
          echo "Excepion occured...please verify"
        timeoutInSeconds: 400
        

  - type: Command                   
    name: "Install JDK 17"                 
    timeoutInSeconds: 600           
    command: |
        cd ~
        mkdir product
        cd product  
        wget -q https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz
        tar xf *tar.gz
        rm *tar.gz
        ls -l
        export JAVA_HOME=`echo -n ~/product/jdk-*`
        export PATH=$JAVA_HOME/bin:$PATH
    onFailure:                      
      - type: Command
        command: |
          echo "Excepion occured at jdk installation...please verify"
        timeoutInSeconds: 600
              

  - type: Command                   
    name: "Install maven"                 
    timeoutInSeconds: 6000       
    command: |
        cd ~
        cd product
        sudo apt update
        wget -q https://downloads.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz
        tar xf apache-maven-3.8.5-bin.tar.gz
        rm *tar.gz
        ls -l
        export JAVA_HOME=`echo -n ~/product/jdk-*`
        export PATH=$JAVA_HOME/bin:$PATH
        export M2_HOME=~/product/apache-maven-3.8.5
        export MAVEN_HOME=~/product/apache-maven-3.8.5
        export PATH=${M2_HOME}/bin:${PATH}
        mvn -version
    onFailure:                      
      - type: Command
        command: |
          echo "Excepion occured at maven installation...please verify"
        timeoutInSeconds: 6000
                     

  - type: Command                   
    name: "Install apache tomcat"                 
    timeoutInSeconds: 6000       
    command: |
        cd ~
        cd product
        sudo apt update
        wget -q https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.79/bin/apache-tomcat-8.5.79.tar.gz
        tar xf apache-tomcat-8.5.79.tar.gz
        rm *tar.gz
        cd apache-tomcat-8.5.79/bin
        sh startup.sh
        
    onFailure:                      
      - type: Command
        command: |
          echo "Excepion occured at apache tomcat installation...please verify"
        timeoutInSeconds: 6000
             

  - type: Command
    name: "Build Source and pack into container image"
    timeoutInSeconds: 400
    command: |
      cd ${OCI_PRIMARY_SOURCE_DIR}
      echo Running maven package - Working in `pwd`
      mvn package  
      docker images
          
  - type: Command
    name: "Fix resources location in container image"
    timeoutInSeconds: 60
    command: |
      cd ${OCI_PRIMARY_SOURCE_DIR}
      pwd
      ls -lrt
      ls -lrt /workspace/CheckMateSite/target/
      echo Running docker update - Working in `pwd`
      docker build  --tag checkmatesite:latest --file dockerfile  .  
      echo images are
      docker images
      cd ${OCI_PRIMARY_SOURCE_DIR}

outputArtifacts:
  - name: checkmatesite_container_image
    type: DOCKER_IMAGE
    location: checkmatesite:latest
  - name: service_yaml
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/checkmate-service.yml
  - name: ingressRules_yaml
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/checkmate-ingress.yaml
  - name: deployment_yaml
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/checkmate-deployment.yml
